---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: profilebindings.profiles.barpilot.io
spec:
  group: profiles.barpilot.io
  names:
    kind: ProfileBinding
    listKind: ProfileBindingList
    plural: profilebindings
    singular: profilebinding
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.profileRef.name
      name: Profile
      type: string
    - jsonPath: .status.targetedResources
      name: Targeted
      type: integer
    - jsonPath: .status.updatedResources
      name: Updated
      type: integer
    - jsonPath: .status.failedResources
      name: Failed
      type: integer
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: |-
          ProfileBinding is the Schema for the profilebindings API.
          A ProfileBinding applies a Profile to a set of target resources based on
          selection criteria and update strategy.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: spec defines the desired state of ProfileBinding
            properties:
              enabled:
                default: true
                description: enabled determines whether this binding is active
                type: boolean
              profileRef:
                description: profileRef references the Profile to apply
                properties:
                  name:
                    description: name is the name of the Profile resource
                    minLength: 1
                    type: string
                required:
                - name
                type: object
              targetSelector:
                description: targetSelector defines which resources this binding applies
                  to
                properties:
                  namespaces:
                    description: |-
                      namespaces where to look for resources
                      If empty, uses the ProfileBinding's namespace
                    items:
                      type: string
                    maxItems: 100
                    type: array
                    x-kubernetes-list-type: set
                  objectSelector:
                    description: objectSelector selects specific objects within the
                      targeted resources
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector
                          requirements. The requirements are ANDed.
                        items:
                          description: |-
                            A label selector requirement is a selector that contains values, a key, and an operator that
                            relates the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector
                                applies to.
                              type: string
                            operator:
                              description: |-
                                operator represents a key's relationship to a set of values.
                                Valid operators are In, NotIn, Exists and DoesNotExist.
                              type: string
                            values:
                              description: |-
                                values is an array of string values. If the operator is In or NotIn,
                                the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                the values array must be empty. This array is replaced during a strategic
                                merge patch.
                              items:
                                type: string
                              type: array
                              x-kubernetes-list-type: atomic
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                        x-kubernetes-list-type: atomic
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: |-
                          matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                          map is equivalent to an element of matchExpressions, whose key field is "key", the
                          operator is "In", and the values array contains only "value". The requirements are ANDed.
                        type: object
                    type: object
                    x-kubernetes-map-type: atomic
                  resourceRule:
                    description: |-
                      resourceRule defines what resources to target
                      Same format as admissionregistration.k8s.io/v1.Rule
                      Allows targeting multiple API groups/versions/resources
                    properties:
                      apiGroups:
                        description: |-
                          APIGroups is the API groups the resources belong to. '*' is all groups.
                          If '*' is present, the length of the slice must be one.
                          Required.
                        items:
                          type: string
                        type: array
                        x-kubernetes-list-type: atomic
                      apiVersions:
                        description: |-
                          APIVersions is the API versions the resources belong to. '*' is all versions.
                          If '*' is present, the length of the slice must be one.
                          Required.
                        items:
                          type: string
                        type: array
                        x-kubernetes-list-type: atomic
                      resources:
                        description: |-
                          Resources is a list of resources this rule applies to.

                          For example:
                          'pods' means pods.
                          'pods/log' means the log subresource of pods.
                          '*' means all resources, but not subresources.
                          'pods/*' means all subresources of pods.
                          '*/scale' means all scale subresources.
                          '*/*' means all resources and their subresources.

                          If wildcard is present, the validation rule will ensure resources do not
                          overlap with each other.

                          Depending on the enclosing object, subresources might not be allowed.
                          Required.
                        items:
                          type: string
                        type: array
                        x-kubernetes-list-type: atomic
                      scope:
                        description: |-
                          scope specifies the scope of this rule.
                          Valid values are "Cluster", "Namespaced", and "*"
                          "Cluster" means that only cluster-scoped resources will match this rule.
                          Namespace API objects are cluster-scoped.
                          "Namespaced" means that only namespaced resources will match this rule.
                          "*" means that there are no scope restrictions.
                          Subresources match the scope of their parent resource.
                          Default is "*".
                        type: string
                    type: object
                required:
                - resourceRule
                type: object
              updateStrategy:
                default:
                  type: Immediate
                description: updateStrategy defines how updates are rolled out to
                  target resources
                properties:
                  type:
                    default: Immediate
                    description: type of update strategy
                    enum:
                    - Immediate
                    type: string
                required:
                - type
                type: object
            required:
            - profileRef
            - targetSelector
            type: object
          status:
            description: status defines the observed state of ProfileBinding
            properties:
              conditions:
                description: |-
                  conditions represent the current state of the ProfileBinding resource.
                  Each condition has a unique type and reflects the status of a specific aspect of the resource.

                  Standard condition types include:
                  - "Available": the resource is fully functional
                  - "Progressing": the resource is being created or updated
                  - "Degraded": the resource failed to reach or maintain its desired state

                  The status of each condition is one of True, False, or Unknown.
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              failedResources:
                description: failedResources is the count of resources that failed
                  to be updated
                format: int32
                type: integer
              observedGeneration:
                description: observedGeneration reflects the generation most recently
                  observed by the controller
                format: int64
                type: integer
              targetedResources:
                description: targetedResources is the count of resources that match
                  the target selector
                format: int32
                type: integer
              updatedResources:
                description: updatedResources is the count of resources that have
                  been successfully updated
                format: int32
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
